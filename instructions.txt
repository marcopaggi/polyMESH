%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Purpose: Algorithm to generate 2D models of polycrystalline
%          microstructures with triangular (T3) or quadrangular (Q4) finite elements. 
%          It allows to generate meshes of polycrystalline grains fully bonded
%          along the grain boundaries or with interface finite elements 
%          along the grain boundaries.
%
% This code is part of the following article. If used for other research,
% please acknowledge this contribution by citing the following reference: 
%
% M. Paggi, M. Corrado, J. Reinoso (2018) Fracture of solar-grade anisotropic
% polycrystalline Silicon: A combined phase field - cohesive zone model approach,
% Computer Methods in Applied Mechanics and Engineering, 
% Volume 330, 1 March 2018, Pages 123-148,
% https://doi.org/10.1016/j.cma.2017.10.021  
%
% The research presented in that article has received funding from the European Research Council through the ERC Starting Grant 
% “Multi-field and multi-scale Computational Approach to Design and Durability of PhotoVoltaic Modules”— CA2PVM, 
% under the European Union’s Seventh Framework Programme (FP/2007–2013)/ERC Grant Agreement no. 306622. 
% Support to the projects funded by the Spanish Ministry of Economy and Competitiveness 
% (Projects MAT2015–71036-P and MAT2015–71309-P) 
% and the Andalusian Government (Projects of Excellence No. TEP-7093 and P12-TEP-1050) are also acknowledged.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% (1)	Run the MATLAB script "main_polyMESH.m" to generate 
%       a specimen (either square or rectangular) with a polycrystalline microstructure.
%
%	Input parameters:
%	- the x- and y-dimensions of the specimen
%	- the number of grains (to be randomly generated(
%	- the type of finite element (T3 or Q4)
%	- the characteristic size of the finite elements
%
%	The output file generated by this script is:
%	- "input_Gmsh.geo", which is the input file for the software Gmsh, 
%         used in step (2) to generate the FE mesh
%
% (2) 	Open the file "input_Gmsh.geo" with the free software Gmsh and generate the 2D mesh. 
%       The mesh is saved in the file "input_Gmsh.msh".
%
% (3)	Subdivide the content of the file "input_Gmsh.msh" in the following files:
%	- "Gmsh_elements.txt", which contains the connectivity matrix of the 2D elements
%	- "Gmsh_nodes.txt", which contains the coordinates (x,y,z) of all the nodes
%	- "Gmsh_lines.txt", which contains the connectivity matrix of the segments used to discretize the grain boundaries.
%       This data structure is appropriate to be used in input to any FEA software, like FEAP or Abaqus.
%       At this step, all the grains are fully bonded together and intergranular fracture can be simulated 
%       for instance using the phase field approach, as done in the above reference article.
%
% (4)	If one wishes to simulate also transgranular fracture, then run the script 
%       "T3_intelelm_insertion.m" or "Q4_intelelm_insertion.m" 
%       to insert interface elements along the grain boundaries, which can be equipped with a cohesive zone model 
%       as done in the above reference article.
%
%	The output files are:
%	- "feapnodes", which contains the coordinates of the nodes
%	- "feapelems", which contains the connectivity matrix of the elements. 
%          2D elements are associated to Material 1, interface elements to Material 2. 
%          Additional materials can be included, 
%          as many as the number of different grain orientations.
%
% (5)   Anisotropic constitutive properties of the grains can be specified using the script "anisotropic_tensor.m"
%       which contains an example related to polycrystalline Silicon used for photovoltaics.
%
% (6)	Run the FEA software to simulate fracture. For FEAP, include the files "feapnodes" and "feapelems" in the input file.
%
